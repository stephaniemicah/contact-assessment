import { Component, EventEmitter, Output } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { ContactsService } from '../contacts.service';
import { Contact } from '../contact.model';

@Component({
  selector: 'app-new-contact',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './new-contact.component.html',
  styleUrls: ['./new-contact.component.css']
})

export class NewContactComponent {
  @Output() cancel = new EventEmitter<void>();
  @Output() contactAdded = new EventEmitter<void>(); 

  contactForm = new FormGroup({
    name: new FormControl('', [Validators.required]),
    contactNumber: new FormControl('', [Validators.required]),
    email: new FormControl('', [Validators.required, Validators.email]),
  });

  constructor(private contactsService: ContactsService) {}

  onSubmit(): void {
    if (this.contactForm.invalid) {
      console.log('INVALID FORM');
      return;
    }

    const newContact: Contact = {
      id: 0, // Assuming the ID will be auto-generated by the server
      name: this.contactForm.value.name ?? '',
      phone: this.contactForm.value.contactNumber ?? '',
      email: this.contactForm.value.email ?? '',
    };

    this.contactsService.addContact(newContact).subscribe(() => {
      this.contactAdded.emit(); // Notify the parent to refresh views and close modal
    });
  }

  cancelModal(): void {
    this.cancel.emit();
  }
}
